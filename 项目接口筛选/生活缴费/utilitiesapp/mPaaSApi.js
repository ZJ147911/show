// carouselBannerQuery:{
// 	apiExplain: '绿色能量配置轮播图配置查询',
// 	apiFoxID: '',
// 	gapiStr: 'handyserviceAgreeId',
// 	isEncrypt: true,
// 	mock: false,
// 	operationType: 'com.bestpay.handyservice.marketing.api.live.ILiveActivityService.carouselBannerQuery',
// 	url: '/gapi/handyservice/marketing/carouselBannerQuery'
// },

// aggregationRechargeAppOrder:{
// 	apiExplain: '客户端聚合支付下单接口',
// 	gapiStr: 'sharebillsAgreeId',
// 	mock: false,
// 	operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.aggregationRechargeAppOrder',
// 	showLoading: true
// },

exports.mPaaSApi = [
	{
		name: 'adList',
		apiExplain: '获取周边优惠接口',
		autoLogin: true,
		hideTipOnError: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.mobilebiz.launch.web.service.AdvertisingManageService.getAdvertisingList',
		url: '/mapi/adList'
	},
	{ name: 'authVerifyCode', apiExplain: '校验短信验证码', operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.authVerifyCode' },
	{
		name: 'checkInviteCode',
		apiExplain: '判断是否开通电力联名卡接口',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.billcenter.product.service.IAutoPaymentService.checkInviteCode',
		showLoading: true,
		url: '/mapi/billcenter/checkInviteCode'
	},
	{
		name: 'closeAutoPayment',
		apiExplain: '关闭自动代缴',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.billcenter.product.service.IAutoPaymentService.closeAutoPayment',
		url: '/mapi/billcenter/closeAutoPayment'
	},
	{
		name: 'closeBalWarn',
		apiExplain: '关闭余额提醒',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.billcenter.product.service.IBalWarnService.closeBalWarn',
		url: '/mapi/billcenter/closeBalWarn'
	},
	{
		name: 'deleteBillAcctNo',
		apiExplain: '户号删除',
		autoLogin: true,
		isSharebillService: true,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.deleteBillAcctNo',
		url: '/mapi/sharebills-service/api/deleteBillAcctNo/V1'
	},
	{
		name: 'equityOrder',
		apiExplain: '生活+权益代扣接口',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		isEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.live.ILiveEquityService.order',
		url: '/gapi/handyservice/marketing/liveequity/order'
	},
	{
		name: 'festivalShow',
		apiExplain: '春节红包展示查询接口',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		hideTipOnError: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.popup.IPopupActivityService.festivalShow',
		url: '/gapi/handyservice/marketing/festivalShow'
	},
	{
		name: 'getActivities',
		apiExplain: '获取活动配置信息接口',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		hideTipOnError: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.getActivities',
		url: '/gapi/livelihood/product/getActivities'
	},
	{
		name: 'getBusitype',
		apiExplain: '用于查询定位城市所支持的业务类型',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		hideTipOnError: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.getBusitype',
		url: '/gapi/livelihood/product/getBusitype/v2'
	},
	{
		name: 'getNotice',
		apiExplain: '获取大喇叭接口',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		hideTipOnError: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.getNotice',
		url: '/gapi/livelihood/product/getNotice'
	},
	{
		name: 'getReward',
		apiExplain: '红包-领取奖励接口',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.redbagadapter.services.mission.MissionOutputService.getReward',
		url: '/mapi/redbag/missionOutput/getReward'
	},
	{
		name: 'getVoucherList',
		apiExplain: '获取家庭专区商城券列表',
		autoLogin: true,
		gapiStr: 'familyAgreeId',
		hideTipOnError: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.growth.product.api.IFamilyAreaService.getFamilyVoucherList',
		url: '/gapi/growth/family/getVoucherList'
	},
	{
		name: 'history',
		apiExplain: '根据用户订单号查询缴费记录',
		autoLogin: true,
		isSharebillService: true,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.queryBillTxnInfo',
		showLoading: true,
		url: '/mapi/sharebills-service/api/queryBillTxnInfo/V1'
	},
	{
		name: 'isAllow',
		apiExplain: '生活+权益判断是否允许用户购买',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		hideTipOnError: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.pas.IPasEquityService.isAllow',
		url: '/gapi/handyservice/marketing/isAllow'
	},
	{
		name: 'modifyAutoPayment',
		apiExplain: '修改定时代缴服务',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.billcenter.product.service.IAutoPaymentService.modifyAutoPayment',
		url: '/mapi/billcenter/modifyAutoPayment'
	},
	{
		name: 'notBillOrgRecord',
		apiExplain: '无交费单位用户反馈新增记录',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.insertNoFeedbackRecordOfPaymentUnit',
		url: '/gapi/minsheng/livelihood/notBillOrgRecord'
	},
	{
		name: 'obtainPopupPrize',
		apiExplain: '弹窗奖励领取接口',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.popup.IPopupActivityService.obtainPopupPrize',
		url: '/mapi/handyservice/marketing/obtainPopupPrize'
	},
	{
		name: 'openAutoPayment',
		apiExplain: '定时代缴开通',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.billcenter.product.service.IAutoPaymentService.openAutoPayment',
		url: '/mapi/billcenter/openAutoPayment'
	},
	{
		name: 'openBalWarn',
		apiExplain: '开通余额提醒',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.billcenter.product.service.IBalWarnService.openBalWarn',
		showLoading: true,
		url: '/mapi/billcenter/openBalWarn'
	},
	{
		name: 'queryAll',
		apiExplain: '首页缴费列表',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		hideTipOnError: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService4DZG.queryAll',
		url: '/gapi/livelihood/product/queryAll'
	},
	{
		name: 'getBusiCities',
		apiExplain: '查询省市接口',
		autoLogin: true,
		isSharebillService: true,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.getBusiCities',
		url: '/mapi/sharebills-service/api/getBusiCities/V1'
	},
	{
		name: 'queryAutoPaymentDetail',
		apiExplain: '定时代缴已开通用户信息查询',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.billcenter.product.service.IAutoPaymentService.queryAutoPaymentDetail',
		url: '/mapi/billcenter/queryAutoPaymentDetail'
	},
	{
		name: 'queryBill',
		apiExplain: '用户查询账单查询',
		apiFoxID: '/11324507',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.queryOwnBill',
		url: '/gapi/livelihood/product/queryOwnBill'
	},
	{
		name: 'queryBillInfo',
		apiExplain: '订单号查询缴费记录',
		autoLogin: true,
		hideTipOnError: true,
		isSharebillService: true,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.queryBillTxnInfoByOrderNo',
		url: '/mapi/sharebills-service/api/queryBillTxnInfoByOrderNo'
	},
	{
		name: 'queryFavorable',
		apiExplain: '查询优惠接口',
		autoLogin: true,
		isSharebillService: true,
		noApi: true,
		operationType: 'com.bestpay.handyservice.communication.product.service.api.app.IAppService.queryTradeInternalOrder',
		url: 'payassistant-client?method=queryTradeInternalOrder'
	},
	{
		name: 'queryFunds',
		apiExplain: '查询资金源',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.live.ILiveEquityService.queryFunds',
		showLoading: true,
		url: '/gapi/handyservice/marketing/liveequity/queryFunds'
	},
	{
		name: 'queryHistoryBill',
		apiExplain: '查询所有的历史户号',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		hideTipOnError: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.queryBillAcctNo',
		url: '/gapi/livelihood/product/queryBillAcctNo'
	},
	{
		name: 'queryLiveActivity',
		apiExplain: '查询本地配置活动接口',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		hideTipOnError: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.live.ILiveActivityService.queryLiveActivity',
		url: '/gapi/handyservice/live/queryLiveActivity'
	},
	{
		name: 'queryMarktingActivity',
		apiExplain: '查询营销活动接口',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		hideTipOnError: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.live.ILiveActivityService.queryMarktingActivity',
		url: '/gapi/handyservice/live/queryMarktingActivity'
	},
	{
		name: 'queryMinusEquityRights',
		apiExplain: '查询理财优惠券',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.pas.IPasEquityService.queryMinusEquityRights',
		url: '/gapi/handyservice/marketing/queryMinusEquityRights'
	},
	{
		name: 'queryMobileH',
		apiExplain: '查询运营商归属地接口',
		autoLogin: true,
		gapiStr: 'queryMobilId',
		hideTipOnError: true,
		isEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.communication.product.service.api.basic.IBasicService.queryPhoneAttribution',
		url: '/gapi/handyservice/communication/queryPhoneAttribution'
	},
	{
		name: 'queryOrder',
		apiExplain: '用户下单',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.order',
		showLoading: true,
		url: '/gapi/livelihood/product/order'
	},
	{
		name: 'queryOrg',
		apiExplain: '查询缴费单位详细信息',
		autoLogin: true,
		isSharebillService: true,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.getOrgByOrgCode',
		url: '/mapi/sharebills-service/api/getOrgByOrgCode/V1'
	},
	{
		name: 'queryOrgList',
		apiExplain: '根据业务类型查询缴费单位列表',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		isAesEncrypt: true,
		isRisk: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.getOrgsByBusiType',
		url: '/gapi/livelihood/product/getOrgsByBusiType'
	},
	{
		name: 'queryOwnBill4Url',
		apiExplain: '生活缴费查询欠费账单(URL)',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hasResultWrap: true,
		isAesEncrypt: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.queryOwnBill4Url',
		url: '/gapi/livelihood/product/queryOwnBill4Url'
	},
	{
		name: 'queryPopupInfo',
		apiExplain: '弹窗查询接口',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		hideTipOnError: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.popup.IPopupActivityService.queryPopupInfo',
		url: '/gapi/handyservice/marketing/queryPopupInfo'
	},
	{
		name: 'queryRedisSwitch',
		apiExplain: '查询redis接口',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		hideTipOnError: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.live.ILiveGdActivityService.queryRedisSwitch',
		url: '/gapi/handyservice/live/queryRedisSwitch'
	},
	{
		name: 'queryVoucher',
		apiExplain: '户号查询页优惠券信息',
		autoLogin: true,
		gapiStr: 'handyserviceAgreeId',
		isAesEncrypt: true,
		mock: false,
		operationType: 'com.bestpay.handyservice.marketing.api.live.ILiveActivityService.queryVoucher',
		url: '/gapi/handyservice/marketing/queryVoucher'
	},
	{ name: 'sendVerifyCode', apiExplain: '发送短信验证码', operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.sendVerifyCode' },
	{
		name: 'sgccPreQuery',
		apiExplain: '北京国电下单前先进行预查询',
		autoLogin: true,
		isSharebillService: true,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.sgccPreQuery',
		url: '/mapi/sharebills-service/api/sgccPreQuery'
	},
	{
		name: 'tradeOrderClose',
		apiExplain: '取消支付，关闭交易',
		autoLogin: true,
		gapiStr: 'sharebillsAgreeId',
		hideTipOnError: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.tradeOrderClose',
		url: '/gapi/sharebills-service/api/tradeOrderClose'
	},
	{
		name: 'updateBalWarn',
		apiExplain: '修改余额提醒配置',
		autoLogin: true,
		isSharebillService: false,
		mock: false,
		operationType: 'com.bestpay.billcenter.product.service.IBalWarnService.updateBalWarn',
		url: '/mapi/billcenter/updateBalWarn'
	},
	{
		apiExplain: '修改备注名',
		name: 'updateMarkAndDate',
		autoLogin: true,
		isSharebillService: true,
		mock: false,
		operationType: 'com.bestpay.livelihood.product.api.ILivelihoodProdService2Client.updateBillAcctNo',
		url: '/mapi/sharebills-service/api/updateBillAcctNo/V1'
	}
];


//  "getBusitype",
//   "getNotice",
//   "getReward",
//   "getVoucherList",
//   "history",
//   "isAllow",
//   "modifyAutoPayment",
//   "notBillOrgRecord",
//   "obtainPopupPrize",
//   "openAutoPayment",
//   "openBalWarn",
//   "queryAll",
//   "queryArea",