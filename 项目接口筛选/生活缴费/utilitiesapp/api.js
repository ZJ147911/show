exports.API = [
	{
		name: "queryArea",
		urlSuffix: "getBusiCities/V1",
		method: "POST",
		isMock: false,
		cache: false,
		isSharebillService: true,
		mockUrl: "mockdata/queryArea.json",
	},
	{
		name: "queryOrg",
		urlSuffix: "getOrgByOrgCode/V1",
		method: "POST",
		isMock: false,
		isSharebillService: true,
		mockUrl: "mockdata/queryOrg.json",
	},
	{
		name: "updateMarkAndDate",
		urlSuffix: "updateBillAcctNo/V1",
		method: "POST",
		isMock: false,
		isSharebillService: true,
		mockUrl: "mockdata/ubillNo.json",
	},
	{
		name: "deleteBill",
		urlSuffix: "deleteBillAcctNo/V1",
		method: "POST",
		isMock: false,
		isSharebillService: true,
		mockUrl: "mockdata/dbillNo.json",
	},
	{
		name: "adList",
		urlSuffix: "adList",
		method: "POST",
		isSharebillService: false,
		gapiStr: false,
		isMock: false,
		hideTipOnError: true,
		mockUrl: "mockdata/adList.json",
	},
	{
		name: "history",
		urlSuffix: "queryBillTxnInfo/V1",
		method: "POST",
		isMock: false,
		isSharebillService: true,
		mockUrl: "mockdata/payhistory.json",
	},
	{
		name: "querySMS",
		urlSuffix: "queryAlertsSMS/V1",
		method: "POST",
		isMock: false,
		isSharebillService: true,
		mockUrl: "mockdata/querySMS.json",
	},
	{
		name: "queryBillInfo",
		urlSuffix: "queryBillTxnInfoByOrderNo",
		method: "POST",
		isMock: false,
		hideTipOnError: true,
		isSharebillService: true,
	},
	{ name: "sgccPreQuery", urlSuffix: "sgccPreQuery", method: "POST", isMock: false, isSharebillService: true },
	{ name: "sgccBindAcctNO", urlSuffix: "sgccBindAcctNO", method: "POST", isMock: false, isSharebillService: true },
	{
		name: "openAutoPayment",
		urlSuffix: "billcenter/openAutoPayment",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "closeAutoPayment",
		urlSuffix: "billcenter/closeAutoPayment",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "modifyAutoPayment",
		urlSuffix: "billcenter/modifyAutoPayment",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "queryAutoPaymentDetail",
		urlSuffix: "billcenter/queryAutoPaymentDetail",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "checkInviteCode",
		urlSuffix: "billcenter/checkInviteCode",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "queryMobileH",
		urlSuffix: "queryMobileH",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "queryMobilId",
	},
	{
		name: "queryPopupInfo",
		urlSuffix: "handyservice/marketing/queryPopupInfo",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "obtainPopupPrize",
		urlSuffix: "handyservice/marketing/obtainPopupPrize",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "getReward",
		urlSuffix: "redbag/missionOutput/getReward",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "queryLiveActivity",
		urlSuffix: "handyservice/live/queryLiveActivity",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "queryMarktingActivity",
		urlSuffix: "handyservice/live/queryMarktingActivity",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},

	{
		name: "queryRedisSwitch",
		urlSuffix: "handyservice/live/queryRedisSwitch",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "openBalWarn",
		urlSuffix: "billcenter/openBalWarn",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "updateBalWarn",
		urlSuffix: "billcenter/updateBalWarn",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "closeBalWarn",
		urlSuffix: "billcenter/closeBalWarn",
		method: "POST",
		isMock: false,
		isSharebillService: false,
	},
	{
		name: "talentShow",
		urlSuffix: "handyservice/marketing/talentShow",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "grantTalentRewards",
		urlSuffix: "handyservice/marketing/grantTalentRewards",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "tradeOrderClose",
		urlSuffix: "tradeOrderClose",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: true,
		gapiStr: "sharebillsAgreeId",
	},
	{
		name: "festivalShow",
		urlSuffix: "handyservice/marketing/festivalShow",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "getVoucherList",
		urlSuffix: "growth/family/getVoucherList",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "familyAgreeId",
	},
	{
		name: "appBankLogoQuery",
		urlSuffix: "electacc/product/appBankLogoQuery",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "bankqueryAgreeId",
	},
	{
		name: "queryFunds",
		urlSuffix: "handyservice/marketing/liveequity/queryFunds",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "queryMinusEquityRights",
		urlSuffix: "handyservice/marketing/queryMinusEquityRights",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "queryFavorable",
		urlSuffix: "payassistant-client?method=queryTradeInternalOrder",
		method: "POST",
		isSharebillService: true,
		noApi: true,
	},
	{
		name: "queryOrgList",
		urlSuffix: "livelihood/product/getOrgsByBusiType",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
		isRisk: true,
	},
	{
		name: "queryMarketScore",
		urlSuffix: "redbag/scoremarket/queryMarketScore",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "starNoAgreeId",
		encryptTech: true,
	},
	{
		name: "queryOutPutMarketProduct",
		urlSuffix: "redbag/scoremarket/queryOutPutMarketProduct",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "starAgreeId",
		encryptTech: true,
	},
	{
		name: "equityOrder",
		urlSuffix: "handyservice/marketing/liveequity/order",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		gapiStr: "handyserviceAgreeId",
		encryptTech: true,
	},
	{
		name: "getActivities",
		urlSuffix: "livelihood/product/getActivities",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		hideTipOnError: true,
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
	},
	{
		name: "getBusitype",
		urlSuffix: "livelihood/product/getBusitype/v2",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		hideTipOnError: true,
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
	},
	{
		name: "queryBill",
		urlSuffix: "livelihood/product/queryOwnBill",
		apiFoxYun: true,
		method: "POST",
		isMock: false,
		isSharebillService: false,
		mockUrl: "mockdata/queryBill.json",
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
	},
	{
		name: "queryOrder",
		urlSuffix: "livelihood/product/order",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		mockUrl: "mockdata/order.json",
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
	},
	{
		name: "queryHistoryBill",
		urlSuffix: "livelihood/product/queryBillAcctNo",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		hideTipOnError: true,
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
	},
	{
		name: "queryOwnBill4Url",
		urlSuffix: "livelihood/product/queryOwnBill4Url",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
	},
	{
		name: "getNotice",
		urlSuffix: "livelihood/product/getNotice",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		hideTipOnError: true,
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
	},
	{
		name: "queryAll",
		urlSuffix: "livelihood/product/queryAll",
		method: "POST",
		isMock: false,
		isSharebillService: false,
		hideTipOnError: true,
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		hasResultWrap: true,
	},
	{
		name: "queryTheMonthTaskListForLifePay",
		urlSuffix: "redbag/missionOutput/queryTheMonthTaskListForLifePay",
		method: "POST",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		gapiStr: "redBagAgreeId",
		encryptAll: true,
	},
	{
		name: "isAllow",
		urlSuffix: "handyservice/marketing/isAllow",
		method: "POST",
		apiFoxYun: true,
		apiFoxID: "/20043992",
		hideTipOnError: true,
		isMock: false,
		isSharebillService: false,
		encryptAll: true,
		gapiStr: "handyserviceAgreeId",
	},
	{
		name: "starReceiveQuery",
		urlSuffix: "handyservice/marketing/starReceiveQuery",
		method: "POST",
		gapiStr: "handyserviceAgreeId",
		isSharebillService: false,
		encryptTech: true,
	},
	{
		name: "pasStarReceive",
		urlSuffix: "handyservice/marketing/pasStarReceive",
		method: "POST",
		gapiStr: "handyserviceAgreeId",
		isSharebillService: false,
		encryptTech: true,
	},
	{
		name: "notBillOrgRecord",
		urlSuffix: "minsheng/livelihood/notBillOrgRecord",
		method: "POST",
		gapiStr: "sharebillsAgreeId",
		encryptAll: true,
		isSharebillService: false,
	},
	{
		name: "queryVoucher",
		urlSuffix: "handyservice/marketing/queryVoucher",
		method: "POST",
		apiFoxYun: true,
		apiFoxID: "/29361298",
		encryptAll: true,
		gapiStr: "handyserviceAgreeId",
	},
]
